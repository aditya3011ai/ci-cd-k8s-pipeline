name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  sonarqube:
    name: SonarCloud Scan
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          cd user-service && npm install --legacy-peer-deps
          cd ../order-service && npm install --legacy-peer-dep

      - name: Run SonarCloud Scan
        uses: sonarsource/sonarqube-scan-action@v2
        with:
          args: >
            -Dsonar.projectKey=YOUR_PROJECT_KEY
            -Dsonar.organization=YOUR_ORG_KEY
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # Build Docker Images
  build-images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: sonarqube
    strategy:
      matrix:
        service: [user-service, order-service]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest ./${{ matrix.service }}

  # Trivy Security Scan
  trivy-scan:
    name: Scan images with Trivy
    runs-on: ubuntu-latest
    needs: build-images
    strategy:
      matrix:
        service: [user-service, order-service]

    steps:
    - name: Install Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest
        format: table
        exit-code: 0 # keep 0 for demo; set to 1 to fail on high vulns
        severity: CRITICAL,HIGH

  # Push to Docker Hub
  push-images:
    name: Push Docker Images to Docker Hub
    runs-on: ubuntu-latest
    needs: trivy-scan
    strategy:
      matrix:
        service: [user-service, order-service]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Build Docker image again (each job is fresh)
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest ./${{ matrix.service }}

    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest
